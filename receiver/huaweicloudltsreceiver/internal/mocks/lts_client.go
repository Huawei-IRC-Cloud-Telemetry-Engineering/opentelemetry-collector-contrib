// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	model "github.com/huaweicloud/huaweicloud-sdk-go-v3/services/lts/v2/model"
	mock "github.com/stretchr/testify/mock"
)

// LtsClient is an autogenerated mock type for the LtsClient type
type LtsClient struct {
	mock.Mock
}

// ListLogs provides a mock function with given fields: request
func (_m *LtsClient) ListLogs(request *model.ListLogsRequest) (*model.ListLogsResponse, error) {
	ret := _m.Called(request)

	if len(ret) == 0 {
		panic("no return value specified for ListLogs")
	}

	var r0 *model.ListLogsResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(*model.ListLogsRequest) (*model.ListLogsResponse, error)); ok {
		return rf(request)
	}
	if rf, ok := ret.Get(0).(func(*model.ListLogsRequest) *model.ListLogsResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.ListLogsResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*model.ListLogsRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewLtsClient creates a new instance of LtsClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLtsClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *LtsClient {
	mock := &LtsClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
